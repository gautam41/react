{"ast":null,"code":"var _jsxFileName = \"/home/gau-tamm/Documents/ReactJS/redux/project/src/redux/counter/Counter.js\";\nimport React, { Suspense, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCounter } from \"./counter.action\"; //import cardComponent from \"../cardComponent\";\n\nconst cardComponent = React.lazy(() => import(\"../redux/cardComponent\"));\n\nclass Counter extends Component {\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Your Counter is :\", this.props.count), React.createElement(\"button\", {\n      onClick: () => this.props.increment(this.props.count + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Increment\"), React.createElement(\"button\", {\n      onClick: () => this.props.decrement(this.props.count - 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Decrement\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(Suspense, {\n      fallback: React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"loading...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"cardComponent\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  count: state.count.count\n});\n\nconst mapDispatchToProps = dispatch => ({\n  increment: count => dispatch(setCounter(count)),\n  decrement: count => dispatch(setCounter(count))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/home/gau-tamm/Documents/ReactJS/redux/project/src/redux/counter/Counter.js"],"names":["React","Suspense","Component","connect","setCounter","cardComponent","lazy","Counter","render","console","log","props","count","increment","decrement","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,MAAMC,aAAa,GAAGL,KAAK,CAACM,IAAN,CAAW,MAAM,OAAO,wBAAP,CAAjB,CAAtB;;AACA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC9BM,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAsB,KAAKA,KAAL,CAAWC,KAAjC,CADF,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKD,KAAL,CAAWE,SAAX,CAAqB,KAAKF,KAAL,CAAWC,KAAX,GAAmB,CAAxC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAKE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKD,KAAL,CAAWG,SAAX,CAAqB,KAAKH,KAAL,CAAWC,KAAX,GAAmB,CAAxC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,EASE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF;AAeD;;AAlB6B;;AAoBhC,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCJ,EAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYA;AADa,CAAL,CAA7B;;AAGA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACtCL,EAAAA,SAAS,EAAED,KAAK,IAAIM,QAAQ,CAACd,UAAU,CAACQ,KAAD,CAAX,CADU;AAGtCE,EAAAA,SAAS,EAAEF,KAAK,IAAIM,QAAQ,CAACd,UAAU,CAACQ,KAAD,CAAX;AAHU,CAAL,CAAnC;;AAMA,eAAeT,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,OAA7C,CAAf","sourcesContent":["import React, { Suspense, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCounter } from \"./counter.action\";\n//import cardComponent from \"../cardComponent\";\nconst cardComponent = React.lazy(() => import(\"../redux/cardComponent\"));\nclass Counter extends Component {\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <h1>Your Counter is :{this.props.count}</h1>\n        <button onClick={() => this.props.increment(this.props.count + 1)}>\n          Increment\n        </button>\n        <button onClick={() => this.props.decrement(this.props.count - 1)}>\n          Decrement\n        </button>\n        <button>Reset</button>\n        <Suspense fallback={<h1>loading...</h1>}>\n          <cardComponent />\n        </Suspense>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  count: state.count.count\n});\nconst mapDispatchToProps = dispatch => ({\n  increment: count => dispatch(setCounter(count)),\n\n  decrement: count => dispatch(setCounter(count))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"]},"metadata":{},"sourceType":"module"}