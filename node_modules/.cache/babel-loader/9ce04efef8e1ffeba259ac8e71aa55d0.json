{"ast":null,"code":"var _jsxFileName = \"/home/gau-tamm/Documents/ReactJS/redux/project/src/redux/counter/Counter.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCounter } from \"./counter.action\";\n\nclass Counter extends Component {\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Your Counter is :\", this.props.count), React.createElement(\"button\", {\n      onClick: () => this.props.setCounter(this.props.count + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Increment\"), React.createElement(\"button\", {\n      onClick: () => this.props.setCounter(this.props.count - 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Decrement\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Reset\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  count: state.count.count\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCounter: count => dispatch(setCounter(count))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/home/gau-tamm/Documents/ReactJS/redux/project/src/redux/counter/Counter.js"],"names":["React","Component","connect","setCounter","Counter","render","console","log","props","count","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC9BI,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAsB,KAAKA,KAAL,CAAWC,KAAjC,CADF,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKD,KAAL,CAAWL,UAAX,CAAsB,KAAKK,KAAL,CAAWC,KAAX,GAAmB,CAAzC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAKE;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKD,KAAL,CAAWL,UAAX,CAAsB,KAAKK,KAAL,CAAWC,KAAX,GAAiB,CAAvC,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CADF;AAUD;;AAb6B;;AAehC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCF,EAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYA;AADa,CAAL,CAA7B;;AAGA,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACtCV,EAAAA,UAAU,EAAEM,KAAK,IAAII,QAAQ,CAACV,UAAU,CAACM,KAAD,CAAX;AADS,CAAL,CAAnC;;AAIA,eAAeP,OAAO,CAACQ,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,OAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCounter } from \"./counter.action\";\n\nclass Counter extends Component {\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <h1>Your Counter is :{this.props.count}</h1>\n        <button onClick={() => this.props.setCounter(this.props.count + 1)}>\n          Increment\n        </button>\n        <button onClick={()=>this.props.setCounter(this.props.count-1)}>Decrement</button>\n        <button>Reset</button>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  count: state.count.count\n});\nconst mapDispatchToProps = dispatch => ({\n  setCounter: count => dispatch(setCounter(count))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"]},"metadata":{},"sourceType":"module"}